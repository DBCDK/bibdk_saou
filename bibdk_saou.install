<?php
/**
 * @file
 * Install, update and uninstall functions for the bibdk_saou module.
 */

/**
 * Implements hook_ding_entity_fields
 */
function bibdk_saou_ding_entity_fields() {
  $display_full = array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'hidden',
    ),
    'reservation' => array(
      'type' => 'hidden',
    ),
    'full' => array(
      'label' => 'hidden',
      'type' => 'hidden',
    ),
  );
  return array(
    'bibdk_saou_link' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Link to saou ressources'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation',
        'display' => $display_full,
      ),
    ),
  );
}

/**
 * Implements hook_requirements()
 */
function bibdk_saou_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $url = variable_get('open_saou_url');
    if ( !isset($url) ) {
      $requirements['open_saou_url'] = array(
        'title' => t('SAOU settings'),
        'value' =>  l(t('Url to soau webservice must be set in admin'), 'admin/config/serviceclient/settings'),
        'severity' => REQUIREMENT_ERROR
      );
    }
  }
  return $requirements;
}

/** Cleanup
 *
 * Implements hook_disable.
 */
function bibdk_saou_disable() {
  $fields = bibdk_saou_ding_entity_fields();
  foreach ($fields as $field_name => $field) {
    field_delete_instance($field_name);
    field_delete_field($field_name);
  }
}